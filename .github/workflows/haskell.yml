# This is a basic workflow to help you get started with Actions

name: Build, test, and deploy to GitHub Pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: ðŸ“¥ Checkout repository
        uses: actions/checkout@v2

      - name: ðŸ§° Setup Stack
        uses: haskell/actions/setup@v1
        with:
          enable-stack: true

      - name: ðŸ§° Setup nix (cache)
        uses: cachix/install-nix-action@v13
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: ðŸ’¾ Setup cachix (miso-haskell)
        uses: cachix/cachix-action@v10
        with:
          name: miso-haskell

      - name: ðŸ’¾ Cache .stack/
        uses: actions/cache@v2
        with:
          path: |
            .stack
          key: ${{ runner.os }}-${{ hashFiles('stack.yaml.lock', 'simple-topes.cabal') }}-stack

      - name: ðŸ”¨ Install BNFC, alex and happy (with Stack)
        run: |
          stack install alex happy BNFC

      - name: ðŸ”¨ Generate Syntax files using BNFC
        run: |
          cd simple-topes/ && (make syntax; cd ../)

      - name: ðŸ”¨ Build and test (with Stack)
        run: |
          stack test

      - name: ðŸ”¨ Build Haddock Documentation (with Stack)
        run: |
          stack haddock
          mkdir -p dist/haddock
          mv $(stack path --local-doc-root)/* dist/haddock

      - name: ðŸ”¨ Build GHCJS version with Nix
        run: |
          rm -f simple-topes/simple-topes.cabal
          nix-build try-simple-topes/
          mkdir -p dist/result/bin
          cp -r ./result/bin/try-simple-topes.jsexe/ dist/result/bin/.
          chmod -R +w dist/
          cp try-simple-topes/index.html dist/.

      - name: ðŸ“˜ Publish Documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist
